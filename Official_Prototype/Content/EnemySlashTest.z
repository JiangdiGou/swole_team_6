/********************************************************************************
file    EnemySlashTest.z
author  Mitchell Regan
par     Contact: mitchell.regan@digipen.edu
brief
    Test script to quickly try out a new way of attacking. Lets you hit enemies by 
    just having the L-Mouse down and moving back and forth over enemies whithin range.

All content © 2015 DigiPen (USA) Corporation, all rights reserved.
*******************************************************************************/
class EnemySlashTest : ZilchComponent
{
    //Amount of time between mouse over and mouse exit. If fast enough, registers as a slash
    var SlashTime:Real = 0;
    //Determines if this script should start timing the slash
    var SlashStarted:Boolean = false;
    //Position that the mouse entered
    var StartPoint:Real3 = Real3(0,0,0);
    //Position that the mouse exited
    var EndPoint:Real3 = Real3(0,0,0);
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        Zero.Connect(this.Owner, Events.MouseEnter, this.OnMouseEnter);
        Zero.Connect(this.Owner, Events.MouseExit, this.OnMouseExit);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        if(this.SlashStarted)
        {
            this.SlashTime += event.Dt;
        }
    }
    
    function OnMouseEnter(event : ViewportMouseEvent)
    {
        if(event.Mouse.IsButtonDown(MouseButtons.Left))
        {
            //sets the timer to 0 so it can count up
            this.SlashTime = 0;
            //tells this script to start timing the slash
            this.SlashStarted = true;
            //gets the location of the beginning of the slash
            this.StartPoint = event.HitPosition;
        }
    }
    
    function OnMouseExit(event : ViewportMouseEvent)
    {
        if(event.Mouse.IsButtonDown(MouseButtons.Left))
        {
            //tells the script to stop timing the slash
            this.SlashStarted = false;
            //gets the location of the end of the slash
            this.EndPoint = event.HitPosition;
            
            //Only counts as a slash if the mouse movement was fast enough
            if(this.SlashTime < 0.08)
            {
                //Only slashes if this enemy is close enough to the player
                if(this.GetDistanceFromPlayer() <= 3)
                {
                    this.Slash();
                }
            }
        }
    }
    
    //Finds the overall distance this enemy is away from the player
    function GetDistanceFromPlayer():Real
    {
        var ownerX:Real = this.Owner.Transform.WorldTranslation.X;
        var ownerY:Real = this.Owner.Transform.WorldTranslation.Y;
        var playerX:Real = this.Space.FindObjectByName("Player").Transform.WorldTranslation.X;
        var playerY:Real = this.Space.FindObjectByName("Player").Transform.WorldTranslation.Y;
        var distance:Real = Math.Distance(Real2(ownerX, ownerY), Real2(playerX, playerY));
        
        return distance;
    }
    
    //Draws a slash line across this enemy and deals damage
    function Slash()
    {
        //Draws a line over the enemy that indicates the direction of the slash
        var slashLine = DebugLine();
        slashLine.Start(this.StartPoint);
        slashLine.End(this.EndPoint);
        slashLine.Float4Color(Real4(1, 1, 1, 1));
        slashLine.Width(5.0);
        slashLine.Duration(0.5);
        slashLine.Draw();
        
        if(this.Owner.Transform.WorldTranslation.X < this.Space.FindObjectByName("Player").Transform.WorldTranslation.X)
        {
            this.Space.FindObjectByName("Player").Sprite.FlipX = true;
        }
        else
        {
            this.Space.FindObjectByName("Player").Sprite.FlipX = true;
        }
        
        //Tells this owner to take damage
        this.Owner.EnemyHitReaction.OnHit(10, false, false, 20);//20 is basic attack in ComboManager
    }
}
