/********************************************************************************
file    ScrollLoader.z
author  Mitchell Regan
par     Contact: mitchell.regan@digipen.edu
brief
    Determines what scroll level to load when a scroll is used.

All content © 2015 DigiPen (USA) Corporation, all rights reserved.
*******************************************************************************/
class ScrollLoader : ZilchComponent
{
    //Levels to load based on the active scroll in ScrollSelect
    [Property]
    var CraneScroll: Level = null;
    [Property]
    var BoarScroll: Level = null;
    [Property]
    var SerpentScroll: Level = null;
    [Property]
    var TigerScroll: Level = null;
    [Property]
    var DragonScroll: Level = null;
    [Property]
    var TestScroll: Level = null;
    
    var ScrollToLoad : Level = null;
    var ScrollSpace: Space = null;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }
    
    function OnLogicUpdate(event : UpdateEvent)
    {
        if(Zero.Keyboard.KeyIsDown(Keys.Shift) && Zero.Keyboard.KeyIsPressed(Keys.R))
        {
            this.ScrollActivate(6);
        }
    }
    
    //Function Called by ScrollSelect
    function ScrollActivate(iScrollNum_:Integer)
    {
        //When this is activated, it creates a new space
        this.ScrollSpace = this.GameSession.CreateNamedSpace("ScrollSpace", Archetype.Find("Space"));
        
        
        /*  0 = Nothing
            1 = Crane,
            2 = Boar,
            3 = Serpent,
            4 = Tiger,
            5 = Dragon 
        */
        if(iScrollNum_ == 1)
        {
            //Makes sure the crane scroll level is loaded
            if(this.CraneScroll != null)
            {
                this.ScrollToLoad = this.CraneScroll;
            }
            else
            {
                Console.WriteLine("ScrollLoader.ScrollActivate Crane Scroll = Null");
            }
        }
        else if(iScrollNum_ == 2)
        {
            //Makes sure the boar scroll level is loaded
            if(this.BoarScroll != null)
            {
                this.ScrollToLoad = this.BoarScroll;
            }
            else
            {
                Console.WriteLine("ScrollLoader.ScrollActivate Boar Scroll = Null");
            }
        }
        else if(iScrollNum_ == 3)
        {
            //Makes sure the serpent scroll level is loaded
            if(this.SerpentScroll != null)
            {
                this.ScrollToLoad = this.SerpentScroll;
            }
            else
            {
                Console.WriteLine("ScrollLoader.ScrollActivate Serpent Scroll = Null");
            }
        }
        else if(iScrollNum_ == 4)
        {
            //Makes sure the tiger scroll level is loaded
            if(this.TigerScroll != null)
            {
                this.ScrollToLoad = this.TigerScroll;
            }
            else
            {
                Console.WriteLine("ScrollLoader.ScrollActivate Tiger Scroll = Null");
            }
        }
        else if(iScrollNum_ == 5)
        {
            //Makes sure the dragon scroll level is loaded
            if(this.DragonScroll != null)
            {
                this.ScrollToLoad = this.DragonScroll;
            }
            else
            {
                Console.WriteLine("ScrollLoader.ScrollActivate Dragon Scroll = Null");
            }
        }
        else if(iScrollNum_ == 6)
        {
            //Makes sure the dragon scroll level is loaded
            if(this.DragonScroll != null)
            {
                this.ScrollToLoad = this.TestScroll;
            }
            else
            {
                Console.WriteLine("ScrollLoader.ScrollActivate Dragon Scroll = Null");
            }
        }
        
        //load the appropriate scroll
        this.ScrollSpace.LoadLevel(this.ScrollToLoad);
    }
}
