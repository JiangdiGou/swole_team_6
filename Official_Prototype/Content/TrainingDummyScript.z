/********************************************************************************
file    TrainingDummyScript.z
author  Mitchell Regan
par     Contact: mitchell.regan@digipen.edu
brief
    Script to attach to a dummy for our player to practice attacks on.

All content © 2015 DigiPen (USA) Corporation, all rights reserved.
*******************************************************************************/
class TrainingDummyScript : ZilchComponent
{
    [Property]
    var ReactToBasic:Boolean = false;
    
    [Property]
    var ReactToSlash:Boolean = false;
    
    [Property]
    var ReactToScroll:Boolean = false;
    
    //Dummy's Health
    [Property]
    var IHealth:Integer = 100;
    //Amount of time for a dead dummy to despawn when killed
    [Property]
    var IDespawnTime:Real = 0;
    
    var RegSize:Real3 = Real3(0,0,0);
    var HitSize:Real3 = Real3(0,0,0);
    
    //Sound Manager object
    var SoundPlayer : Cog;
    
    //Tutorial Level exception
    [Property]
    var Box : Boolean;
    
    function Initialize(init : CogInitializer)
    {
        this.RegSize = this.Owner.Transform.Scale;
        this.HitSize = Real3(this.Owner.Transform.Scale.X * 0.8, this.Owner.Transform.Scale.Y, 1);
            
        //Find the music manager
        this.SoundPlayer = this.Space.FindObjectByName("BackgroundMusic");
        
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        
    }
    
    
    function OnLogicUpdate(event: UpdateEvent)
    {
        //Starts despawning the enemy once their hp is below 0
        if(this.IHealth <= 0)
        {
            this.IDespawnTime -= event.Dt;
        }
        
        //Destroys this enemy if their hp is below 0 too long
        if(this.IDespawnTime <= 0)
        {
            this.Owner.Destroy();
        }
    }
    
    //Takes the amount of damage this enemy takes, if the attack stuns, and if the attack knocks up.
    function OnHit(iDamageTaken_:Integer, bIsStunned_:Boolean, bKnockedUp_:Boolean)
    {
            //Reduces the object's hp by the damage taken
            this.IHealth -= iDamageTaken_;
            
            //Increases the player's combo by calling the AttackHit function in the ComboManager
            this.GameSession.FindSpaceByName("HUDSpace").LevelSettings.ComboManager.AttackHit();
            
            //Play hit sound effect
            this.SoundPlayer.BackgroundMusic.PlaySword();
            
            
            var seqHit = Action.Sequence(this.Owner.Actions);
            //Turn red and squish slightly
            Action.Property(seqHit, @this.Owner.Sprite.Color, Real4(1, 0, 0, 1), 0.02, Ease.Linear);
            Action.Property(seqHit, @this.Owner.Transform.Scale, this.HitSize, 0.02, Ease.Linear);
            
            Action.Delay(seqHit, 0.05);
            //Return to regular look
            Action.Property(seqHit, @this.Owner.Sprite.Color, Real4(1, 1, 1, 1), 0.05, Ease.Linear);
            Action.Property(seqHit, @this.Owner.Transform.Scale, this.RegSize, 0.05, Ease.Linear);
    }
}
