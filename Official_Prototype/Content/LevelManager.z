/********************************************************************************
file    LevelManager.z
author  Josh Painter
par     Contact: j.painter@digipen.edu
brief
    Controls when a gameplay level should transition to the next level.

All content © 2015 DigiPen (USA) Corporation, all rights reserved.
*******************************************************************************/
class LevelManager : ZilchComponent
{
    var GameOver : Boolean = false;
    
    [Property]
    var LevelToLoad : Level;
    
    [Property]
    var Tutorial : Boolean;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        if(!this.Tutorial)
        {
            if(this.Owner.EnemyCounter.EnemiesAlive <= 0)
            {
                var square = this.Space.CreateAtPosition(Archetype.Find("ClearSquare"), this.Owner.Transform.Translation + Real3(0,0,5));
                
                var seq = Action.Sequence(this.Owner.Actions);
                
                Action.Property(seq, @square.Sprite.Color, Real4(0,0,0,1), 2, Ease.Linear);
                Action.Call(seq, this.LoadNextLv);
            }
            
            if(this.GameOver)
            {
                this.GameOver = false;
                
                var square = this.Space.CreateAtPosition(Archetype.Find("ClearSquare"), this.Owner.Transform.Translation + Real3(0,0,5));
                
                var seq = Action.Sequence(this.Owner.Actions);
                
                Action.Property(seq, @square.Sprite.Color, Real4(0,0,0,1), 2, Ease.Linear);
                Action.Call(seq, this.LoadNextLv);
            }
        }
    }
    
    function LoadNextLv()
    {
        this.Space.LoadLevel(this.LevelToLoad);
    }
}
