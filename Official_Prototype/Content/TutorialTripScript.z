enum Trip {Trip_1, Trip_2, Trip_3, Trip4, Trip_5}

class TutorialTripScript : ZilchComponent
{
    [Property]
    var TripNum : Trip;
    
    var Player : Cog;
    
    var Sensei : Cog;
    
    var NodeActive : Boolean = true;
    
    function Initialize(init : CogInitializer)
    {
        //Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
        
        this.Player = this.Space.FindObjectByName("Player");
        this.Sensei = this.Space.FindObjectByName("Sensei");
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
    }
    
    function OnCollisionStarted(event : CollisionEvent)
    {
        var otherObject = event.OtherObject;
        
        if(otherObject.Name == "Player" && this.NodeActive)
        {
            this.CreateScript(this.TripNum);
        }
    }
    
    function CreateScript(tripNum : Trip)
    {
        if(tripNum == Trip.Trip_1)
        {
            this.NodeActive = false;
            
            var seq = Actions.Sequence(this.Owner.Actions);
            
            this.Player.PlayerMovement.BCanMove = false;
            this.Player.Sprite.SpriteSource = SpriteSource.Character_4;
            
            Action.Property(seq, @this.Player.Transform.Translation, this.Player.Transform.Translation + Real3(3,0,0), 1, Ease.Linear);
            Action.Property(seq, @this.Player.PlayerMovement.BCanMove , true, 0.001, Ease.Linear);
        }
        else if(tripNum == Trip.Trip_2)
        {
            this.NodeActive = false;
            
            var bubble = this.Space.CreateAtPosition(Archetype.Find("TutorialBubble"), this.Sensei.Transform.Translation + Real3(-2,3.75,0));
            bubble.FindChildByName("Text1").SpriteText.Text = "Could you fetch me my blade?";
            bubble.FindChildByName("Text2").SpriteText.Text = "It's just upstairs...";
            
            var seq = Actions.Sequence(this.Owner.Actions);
            
            this.StopPlayer(3.4);
            this.Player.Sprite.SpriteSource = SpriteSource.Character_4;
        }
    }
    
    function StopPlayer(duration : Real)
    {
        var seq = Actions.Sequence(this.Owner.Actions);
        
        this.Player.PlayerMovement.BCanMove = false;
        this.Player.RigidBody.Velocity = Real3(0,0,0);
        
        
        Action.Property(seq, @this.Player.Transform.Translation, this.Player.Transform.Translation, duration, Ease.Linear);
        Action.Property(seq, @this.Player.PlayerMovement.BCanMove, true, 0.001, Ease.Linear);
    }
}
